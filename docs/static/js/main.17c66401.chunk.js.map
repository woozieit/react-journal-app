{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","hooks/useForm.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","message","logout","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","class","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploadImg","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17c66401.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {  \r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id  \r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCcHtGSNgqy624yJHxm4QBVMAP93fHF-us\",\r\n    authDomain: \"react-app-cursos-27c23.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-27c23\",\r\n    storageBucket: \"react-app-cursos-27c23.appspot.com\",\r\n    messagingSenderId: \"841461271493\",\r\n    appId: \"1:841461271493:web:6ebc5f765f9bad391e19ac\"\r\n};\r\n \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dccl8ymqy/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from '../firebase/firebase-config'\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote )\r\n\r\n        dispatch( activeNote(doc.id, newNote ) );\r\n        dispatch( addNewNote(doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const  addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n        \r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploadImg = ( file ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();                \r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url =  fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) )\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { types } from '../types/types'\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { startLoading, finishLoading } from './ui'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password)\r\n            .then( ({ user }) => {\r\n                \r\n                dispatch( login( user.uid, user.displayName ) );\r\n\r\n                dispatch( finishLoading() );\r\n\r\n            })\r\n            .catch( e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async ({ user }) => {\r\n                \r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch( \r\n                    login( user.uid, user.displayName )\r\n                );\r\n\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch( \r\n                    login( user.uid, user.displayName )\r\n                );\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { loading } = useSelector( state => state.ui );\r\n    \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'nando@gmail.com',\r\n        password: '123456'\r\n    });\r\n    \r\n    const { email, password } = formValues;\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n        \r\n    }\r\n    \r\n    const handleGoogleLogin = () => {\r\n        \r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\" \r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Hernando',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required!') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid!') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password incorrectly') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                class=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    className=\"btn btn-primary btn-block mb-5\" \r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote( id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startSaveNote, startUploadImg } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUploadImg( file ) );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de deciembre del 2021</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }    \r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                   className=\"btn\"\r\n                   onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { NotesAppBar } from './NotesAppBar';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [ note, reset ])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [ formValues, dispatch ])\r\n\r\n    const handleDelete = () => {\r\n        \r\n        dispatch( startDeleting( id ) );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\" \r\n                    name=\"title\"\r\n                    value={ title }   \r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }   \r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    ( note.url ) && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Sidebar } from './Sidebar'\r\n\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}